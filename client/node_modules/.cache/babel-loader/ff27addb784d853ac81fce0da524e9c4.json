{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abdulshabbir/Documents/Programming/ib-math-expert/client/src/components/Signup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Form, Button, Message, Header } from 'semantic-ui-react';\nimport { signupUser } from '../authentication/signup';\nimport './Signup.css';\nimport { UpdateAuthContext } from './AuthProvider';\nexport const Signup = () => {\n  _s();\n\n  debugger; // state variables for form\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // authenticates user globally in application\n\n  const authenticateUser = useContext(UpdateAuthContext); // form submission handler\n\n  function handleSubmit(email, password, passwordConfirm) {\n    setError('');\n\n    if (password !== passwordConfirm) {\n      setError('Passwords do not match.');\n      return;\n    }\n\n    signupUser(email, password, setError, authenticateUser, setIsLoading);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"signup-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h1\",\n      children: \"Signup Here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      className: \"signup-form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"email...\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      className: \"signup-form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password...\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      className: \"signup-form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"confirm password...\",\n        value: passwordConfirm,\n        onChange: e => setPasswordConfirm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      color: \"blue\",\n      className: \"signup-form-button\",\n      disabled: isLoading,\n      onClick: e => handleSubmit(email, password, passwordConfirm),\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      warning: true,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"by9znX1rozvLETyAx1rRebjPCoI=\");\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/abdulshabbir/Documents/Programming/ib-math-expert/client/src/components/Signup.tsx"],"names":["React","useContext","useState","Form","Button","Message","Header","signupUser","UpdateAuthContext","Signup","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","error","setError","isLoading","setIsLoading","authenticateUser","handleSubmit","e","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react'\nimport { Form, Button, Message, Header } from 'semantic-ui-react'\nimport { signupUser } from '../authentication/signup'\nimport './Signup.css'\nimport { UpdateAuthContext } from './AuthProvider'\n\nexport const Signup = () => {\n    debugger;\n\n    // state variables for form\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [passwordConfirm, setPasswordConfirm] = useState('')\n\n    const [error, setError] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n\n    // authenticates user globally in application\n    const authenticateUser = useContext(UpdateAuthContext)\n\n    // form submission handler\n    function handleSubmit(email: string, password: string, passwordConfirm: string) {\n        setError('')\n        if (password !== passwordConfirm) {\n            setError('Passwords do not match.')\n            return\n        }\n        signupUser(email, password, setError, authenticateUser, setIsLoading)\n    }\n\n    return(\n        <Form className=\"signup-form-container\">\n            <Header as='h1'>Signup Here.</Header>\n            <Form.Field className=\"signup-form-field\">\n                <label>Email: </label>\n                <input \n                    type=\"text\"\n                    placeholder=\"email...\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n            </Form.Field>\n            <Form.Field className=\"signup-form-field\">\n                <label>Password: </label>\n                <input\n                    type=\"password\"\n                    placeholder=\"password...\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n            </Form.Field>\n            <Form.Field className=\"signup-form-field\">\n                <label>Confirm Password: </label>\n                <input\n                    type=\"password\"\n                    placeholder=\"confirm password...\"\n                    value={passwordConfirm}\n                    onChange={(e) => setPasswordConfirm(e.target.value)}\n                />\n            </Form.Field>\n            <Button \n                type=\"submit\"\n                color=\"blue\"\n                className=\"signup-form-button\"\n                disabled={isLoading}\n                onClick={(e) => handleSubmit(email, password, passwordConfirm)}\n            >\n                Sign Up\n            </Button>\n            <Message warning>\n                <p>{error}</p>\n            </Message>\n        </Form>\n    )\n}"]},"metadata":{},"sourceType":"module"}