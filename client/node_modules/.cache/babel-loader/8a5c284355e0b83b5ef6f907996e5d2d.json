{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abdulshabbir/Documents/Programming/ib-math-expert/client/src/components/Signup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport './Signup.css';\nexport const Signup = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [error, setError] = useState('');\n\n  function handleSubmit(email, password, passwordConfirm) {\n    if (password !== passwordConfirm) {\n      setError('Passwords do not match.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"signup-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n      className: \"signup-form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"email...\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      className: \"signup-form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password...\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      className: \"signup-form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"confirm password...\",\n        value: passwordConfirm,\n        onChange: e => setPasswordConfirm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      color: \"blue\",\n      className: \"signup-form-button\",\n      onClick: e => handleSubmit(email, password, passwordConfirm),\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"Y15TVBnz4H3fQvlDnv80nhkMmps=\");\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/abdulshabbir/Documents/Programming/ib-math-expert/client/src/components/Signup.tsx"],"names":["React","useState","Form","Button","Signup","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","error","setError","handleSubmit","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AAEA,OAAO,cAAP;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASY,YAAT,CAAsBR,KAAtB,EAAqCE,QAArC,EAAuDE,eAAvD,EAAgF;AAC5E,QAAIF,QAAQ,KAAKE,eAAjB,EAAkC;AAC9BG,MAAAA,QAAQ,CAAC,yBAAD,CAAR;AACH;AACJ;;AACD,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,UAFhB;AAGI,QAAA,KAAK,EAAEP,KAHX;AAII,QAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,WAAW,EAAC,aAFhB;AAGI,QAAA,KAAK,EAAET,QAHX;AAII,QAAA,QAAQ,EAAGO,CAAD,IAAON,WAAW,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;AAJhC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAmBI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,WAAW,EAAC,qBAFhB;AAGI,QAAA,KAAK,EAAEP,eAHX;AAII,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,kBAAkB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AAJvC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ,eA4BI,QAAC,MAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAC,MAFV;AAGI,MAAA,SAAS,EAAC,oBAHd;AAII,MAAA,OAAO,EAAGF,CAAD,IAAOD,YAAY,CAACR,KAAD,EAAQE,QAAR,EAAkBE,eAAlB,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BJ,EAoCKE,KAAK,gBAAG;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAH,GAAoB,IApC9B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH,CAnDM;;GAAMP,M;;KAAAA,M","sourcesContent":["import React, {useState} from 'react'\nimport { Form, Button } from 'semantic-ui-react'\nimport { signup } from '../authentication/signup'\nimport './Signup.css'\n\nexport const Signup = () => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [passwordConfirm, setPasswordConfirm] = useState('')\n    const [error, setError] = useState('')\n\n    function handleSubmit(email: string, password: string, passwordConfirm: string) {\n        if (password !== passwordConfirm) {\n            setError('Passwords do not match.')\n        }\n    }\n    return(\n        <Form className=\"signup-form-container\">\n            <Form.Field className=\"signup-form-field\">\n                <label>Email: </label>\n                <input \n                    type=\"text\"\n                    placeholder=\"email...\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n            </Form.Field>\n            <Form.Field className=\"signup-form-field\">\n                <label>Password: </label>\n                <input\n                    type=\"password\"\n                    placeholder=\"password...\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n            </Form.Field>\n            <Form.Field className=\"signup-form-field\">\n                <label>Confirm Password: </label>\n                <input\n                    type=\"password\"\n                    placeholder=\"confirm password...\"\n                    value={passwordConfirm}\n                    onChange={(e) => setPasswordConfirm(e.target.value)}\n                />\n            </Form.Field>\n            <Button \n                type=\"submit\"\n                color=\"blue\"\n                className=\"signup-form-button\"\n                onClick={(e) => handleSubmit(email, password, passwordConfirm)}\n            >\n                Sign Up\n            </Button>\n            {error ? <p>{error}</p> : null}\n        </Form>\n    )\n}"]},"metadata":{},"sourceType":"module"}