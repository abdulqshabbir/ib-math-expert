{"ast":null,"code":"import { auth } from '../firebase';\nexport const signupUser = async (email, password, setError, setUser, setIsLoading) => {\n  // clear any previous errors\n  setError('');\n\n  try {\n    // isLoading controls the disabling of the signup button\n    setIsLoading(true); // create user and store in context\n\n    const firebaseUserObject = await auth.createUserWithEmailAndPassword(email, password);\n\n    if (firebaseUserObject.user) {\n      const email = firebaseUserObject.user.email;\n      const password = firebaseUserObject.user.uid;\n      setUser(email, password);\n    } else {\n      setError('No user found in database.');\n    }\n  } catch (e) {\n    // throw error back to client\n    setError(e.message);\n  }\n};","map":{"version":3,"sources":["/Users/abdulshabbir/Documents/Programming/ib-math-expert/client/src/authentication/signup.ts"],"names":["auth","signupUser","email","password","setError","setUser","setIsLoading","firebaseUserObject","createUserWithEmailAndPassword","user","uid","e","message"],"mappings":"AAAA,SAASA,IAAT,QAAqB,aAArB;AAEA,OAAO,MAAMC,UAAU,GACnB,OACIC,KADJ,EAEIC,QAFJ,EAGIC,QAHJ,EAIIC,OAJJ,EAKIC,YALJ,KAMK;AACD;AACAF,EAAAA,QAAQ,CAAC,EAAD,CAAR;;AACA,MAAI;AACA;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ,CAFA,CAIA;;AACA,UAAMC,kBAAkB,GAAG,MAAMP,IAAI,CAACQ,8BAAL,CAAoCN,KAApC,EAA2CC,QAA3C,CAAjC;;AAEA,QAAII,kBAAkB,CAACE,IAAvB,EAA6B;AACzB,YAAMP,KAAa,GAAGK,kBAAkB,CAACE,IAAnB,CAAwBP,KAA9C;AACA,YAAMC,QAAgB,GAAGI,kBAAkB,CAACE,IAAnB,CAAwBC,GAAjD;AACAL,MAAAA,OAAO,CAACH,KAAD,EAAQC,QAAR,CAAP;AACH,KAJD,MAIO;AACHC,MAAAA,QAAQ,CAAC,4BAAD,CAAR;AACH;AACJ,GAdD,CAcE,OAAOO,CAAP,EAAU;AACR;AACAP,IAAAA,QAAQ,CAACO,CAAC,CAACC,OAAH,CAAR;AACH;AACJ,CA5BE","sourcesContent":["import { auth } from '../firebase'\n\nexport const signupUser =\n    async (\n        email: string,\n        password: string,\n        setError: React.Dispatch<React.SetStateAction<string>>,\n        setUser: (email: string, id: string) => void,\n        setIsLoading: React.Dispatch<React.SetStateAction<boolean>>,\n    ) => {\n        // clear any previous errors\n        setError('')\n        try {\n            // isLoading controls the disabling of the signup button\n            setIsLoading(true)\n\n            // create user and store in context\n            const firebaseUserObject = await auth.createUserWithEmailAndPassword(email, password)\n\n            if (firebaseUserObject.user) {\n                const email: string = firebaseUserObject.user.email\n                const password: string = firebaseUserObject.user.uid\n                setUser(email, password)\n            } else {\n                setError('No user found in database.')\n            }\n        } catch (e) {\n            // throw error back to client\n            setError(e.message)\n        }\n    }"]},"metadata":{},"sourceType":"module"}